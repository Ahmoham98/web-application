"""adds order and orderitems postgres datebase tables

Revision ID: d854e48c0aee
Revises: 3b530d581efa
Create Date: 2025-05-16 13:04:37.614639

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd854e48c0aee'
down_revision: Union[str, None] = '3b530d581efa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('total_price', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_orders_uid'), 'orders', ['uid'], unique=True)
    op.create_table('orderitems',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.uid'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_orderitems_uid'), 'orderitems', ['uid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_orderitems_uid'), table_name='orderitems')
    op.drop_table('orderitems')
    op.drop_index(op.f('ix_orders_uid'), table_name='orders')
    op.drop_table('orders')
    # ### end Alembic commands ###
